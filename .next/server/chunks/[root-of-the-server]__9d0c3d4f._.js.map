{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 172, "column": 0}, "map": {"version":3,"sources":["file:///Users/umid/Documents/GitHub/noteability1/src/firebaseConfig.js"],"sourcesContent":["// src/firebaseConfig.js\n// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCbVIUfx56oow-OERFGTEvaHshNeyhuyq8\",\n  authDomain: \"noteability-2d5e3.firebaseapp.com\",\n  projectId: \"noteability-2d5e3\",\n  storageBucket: \"noteability-2d5e3.firebasestorage.app\",\n  messagingSenderId: \"999459422851\",\n  appId: \"1:999459422851:web:d708684a7cdf61324c91b6\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst db = getFirestore(app);\n\nexport { db }; "],"names":[],"mappings":"AAAA,wBAAwB;AACxB,uDAAuD;;;;AACvD;AAAA;AACA;AAAA;;;AAEA,wCAAwC;AACxC,mEAAmE;AACnE,MAAM,iBAAiB;IACrB,QAAQ;IACR,YAAY;IACZ,WAAW;IACX,eAAe;IACf,mBAAmB;IACnB,OAAO;AACT;AAEA,sBAAsB;AACtB,MAAM,MAAM,CAAA,GAAA,sLAAA,CAAA,gBAAa,AAAD,EAAE;AAC1B,MAAM,KAAK,CAAA,GAAA,mKAAA,CAAA,eAAY,AAAD,EAAE","debugId":null}},
    {"offset": {"line": 203, "column": 0}, "map": {"version":3,"sources":["file:///Users/umid/Documents/GitHub/noteability1/src/app/api/activate/route.js"],"sourcesContent":["import { db } from \"../../../firebaseConfig\";\nimport { collection, addDoc } from \"firebase/firestore\";\n\nexport async function POST(request) {\n  const data = await request.json();\n  const { email, password } = data;\n\n  console.log(\"Attempting to save data to Firebase...\", { email, password });\n\n  try {\n    // Verileri Firestore'daki 'activations' koleksiyonuna ekle\n    const docRef = await addDoc(collection(db, \"activations\"), {\n      email: email,\n      password: password, // Gerçek uygulamada şifreleri doğrudan kaydetmek yerine hashlemelisiniz!\n      timestamp: new Date(),\n    });\n\n    console.log(\"Document written with ID: \", docRef.id);\n    return new Response(JSON.stringify({ message: \"Activation successful! Data saved to Firebase.\" }), {\n      status: 200,\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n  } catch (e) {\n    console.error(\"Error adding document to Firestore: \", e);\n    return new Response(JSON.stringify({ message: \"Aktivasyon başarısız oldu! Sunucu hatası.\" + e.message, error: e.message }), {\n      status: 500,\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n  }\n} "],"names":[],"mappings":";;;AAAA;AACA;AAAA;;;AAEO,eAAe,KAAK,OAAO;IAChC,MAAM,OAAO,MAAM,QAAQ,IAAI;IAC/B,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG;IAE5B,QAAQ,GAAG,CAAC,0CAA0C;QAAE;QAAO;IAAS;IAExE,IAAI;QACF,2DAA2D;QAC3D,MAAM,SAAS,MAAM,CAAA,GAAA,mKAAA,CAAA,SAAM,AAAD,EAAE,CAAA,GAAA,mKAAA,CAAA,aAAU,AAAD,EAAE,uHAAA,CAAA,KAAE,EAAE,gBAAgB;YACzD,OAAO;YACP,UAAU;YACV,WAAW,IAAI;QACjB;QAEA,QAAQ,GAAG,CAAC,8BAA8B,OAAO,EAAE;QACnD,OAAO,IAAI,SAAS,KAAK,SAAS,CAAC;YAAE,SAAS;QAAiD,IAAI;YACjG,QAAQ;YACR,SAAS;gBACP,gBAAgB;YAClB;QACF;IACF,EAAE,OAAO,GAAG;QACV,QAAQ,KAAK,CAAC,wCAAwC;QACtD,OAAO,IAAI,SAAS,KAAK,SAAS,CAAC;YAAE,SAAS,8CAA8C,EAAE,OAAO;YAAE,OAAO,EAAE,OAAO;QAAC,IAAI;YAC1H,QAAQ;YACR,SAAS;gBACP,gBAAgB;YAClB;QACF;IACF;AACF","debugId":null}}]
}